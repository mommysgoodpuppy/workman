-- String utility functions for Workman
-- These will need native implementations

-- Get the length of a string
export let strLength = (s) => {
  nativeStrLength(s)
};

-- Get character at index (returns Option<String>)
export let strCharAt = (s, idx) => {
  nativeStrCharAt(s, idx)
};

-- Check if string is empty
export let strIsEmpty = (s) => {
  eq(strLength(s), 0)
};

-- Substring from start to end (exclusive)
export let strSlice = (s, start, end) => {
  nativeStrSlice(s, start, end)
};

-- Check if character is a digit
export let isDigit = (c) => {
  match(strCharAt("0123456789", 0)) {
    None => { false },
    Some(ch) => {
      -- This is a placeholder - we need proper char comparison
      true
    }
  }
};

-- Check if character is alphabetic
export let isAlpha = (c) => {
  -- Placeholder implementation
  true
};

-- Check if character is whitespace
export let isWhitespace = (c) => {
  match(c) {
    " " => { true },
    "\t" => { true },
    "\n" => { true },
    "\r" => { true },
    _ => { false }
  }
};
