from "std/core/int" import { intAdd, intSub, intMul, intDiv, intCompare };

export from "std/option/core" type Option(..);
export from "std/result/core" type Result(..);

export type List<T> = Nil | Cons<T, List<T>>;
export type Ordering = LT | EQ | GT;

export let add = (left, right) => {
  intAdd(left, right)
};

export let sub = (left, right) => {
  intSub(left, right)
};

export let mul = (left, right) => {
  intMul(left, right)
};

export let div = (left, right) => {
  intDiv(left, right)
};

export let cmpInt = (left, right) => {
  intCompare(left, right)
};

export let print = (value) => {
  nativePrint(value)
};
